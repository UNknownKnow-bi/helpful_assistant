{
  "openapi": "3.1.0",
  "info": {
    "title": "Êô∫Êó∂Âä©Êâã (Cortex Assistant) API",
    "description": "\n    ## AI-powered intelligent assistant for Chinese knowledge workers\n\n    This API provides comprehensive functionality for:\n    \n    * **ü§ñ AI Provider Management** - Configure and manage multiple AI models (text/image)\n    * **üìã Task Management** - AI-powered task generation with Eisenhower Matrix\n    * **üí¨ Real-time Chat** - WebSocket-based chat with AI models and thinking visualization\n    * **üë§ User Profiling** - Big Five personality model and work relationship management\n    * **üñºÔ∏è OCR Integration** - Extract text from images using EasyOCR and AI vision models\n    * **üîê JWT Authentication** - Secure user authentication and authorization\n\n    ### Key Features:\n    - **Multi-modal AI Support**: Text generation, image OCR, and vision-language models\n    - **Real-time Streaming**: WebSocket-based chat with background task management\n    - **Personality-based Customization**: Big Five model for personalized AI interactions\n    - **Eisenhower Matrix**: Task prioritization with urgency/importance classification\n    - **Chinese Language Optimized**: Designed specifically for Chinese knowledge workers\n    ",
    "contact": {
      "name": "Cortex Assistant Team",
      "url": "https://github.com/your-org/helpful-assistant",
      "email": "support@cortex-assistant.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    },
    {
      "url": "https://api.cortex-assistant.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register",
        "operationId": "register_api_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Register Api Auth Register Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "operationId": "login_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Login Api Auth Login Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get Current User Info",
        "description": "Get current user information",
        "operationId": "get_current_user_info_api_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh Token",
        "description": "Refresh access token - accepts expired tokens for renewal",
        "operationId": "refresh_token_api_auth_refresh_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Refresh Token Api Auth Refresh Post"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ai-providers": {
      "get": {
        "tags": [
          "AI Providers"
        ],
        "summary": "Get Ai Providers",
        "description": "Get all AI providers for the current user",
        "operationId": "get_ai_providers_api_ai_providers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AIProviderResponse"
                  },
                  "type": "array",
                  "title": "Response Get Ai Providers Api Ai Providers Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "AI Providers"
        ],
        "summary": "Create Ai Provider",
        "description": "Create a new AI provider configuration",
        "operationId": "create_ai_provider_api_ai_providers_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIProviderCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIProviderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ai-providers/{provider_id}": {
      "put": {
        "tags": [
          "AI Providers"
        ],
        "summary": "Update Ai Provider",
        "description": "Update an AI provider configuration",
        "operationId": "update_ai_provider_api_ai_providers__provider_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIProviderUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIProviderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AI Providers"
        ],
        "summary": "Delete Ai Provider",
        "description": "Delete an AI provider configuration",
        "operationId": "delete_ai_provider_api_ai_providers__provider_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-providers/{provider_id}/test": {
      "post": {
        "tags": [
          "AI Providers"
        ],
        "summary": "Test Ai Provider",
        "description": "Test an AI provider configuration",
        "operationId": "test_ai_provider_api_ai_providers__provider_id__test_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-providers/active/{category}": {
      "get": {
        "tags": [
          "AI Providers"
        ],
        "summary": "Get Active Provider By Category",
        "description": "Get the active AI provider for a specific category",
        "operationId": "get_active_provider_by_category_api_ai_providers_active__category__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIProviderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-providers/text-models": {
      "get": {
        "tags": [
          "AI Providers"
        ],
        "summary": "Get Available Text Models",
        "description": "Get all ACTIVE text models for chat selection",
        "operationId": "get_available_text_models_api_ai_providers_text_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AIProviderResponse"
                  },
                  "type": "array",
                  "title": "Response Get Available Text Models Api Ai Providers Text Models Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/ai-providers/active": {
      "get": {
        "tags": [
          "AI Providers"
        ],
        "summary": "Get Active Provider",
        "description": "Get the active text AI provider for backward compatibility",
        "operationId": "get_active_provider_api_ai_providers_active_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIProviderResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/chat/sessions": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Get Chat Sessions",
        "operationId": "get_chat_sessions_api_chat_sessions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ChatSessionResponse"
                  },
                  "type": "array",
                  "title": "Response Get Chat Sessions Api Chat Sessions Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "Create Chat Session",
        "operationId": "create_chat_session_api_chat_sessions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatSessionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatSessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/chat/sessions/{session_id}/messages": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Get Chat Messages",
        "operationId": "get_chat_messages_api_chat_sessions__session_id__messages_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatMessageResponse"
                  },
                  "title": "Response Get Chat Messages Api Chat Sessions  Session Id  Messages Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/sessions/{session_id}": {
      "delete": {
        "tags": [
          "Chat"
        ],
        "summary": "Delete Chat Session",
        "operationId": "delete_chat_session_api_chat_sessions__session_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/sessions/{session_id}/generate-title": {
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "Generate Session Title",
        "operationId": "generate_session_title_api_chat_sessions__session_id__generate_title_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateTitleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Generate Session Title Api Chat Sessions  Session Id  Generate Title Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/sessions/{session_id}/title": {
      "put": {
        "tags": [
          "Chat"
        ],
        "summary": "Rename Session",
        "operationId": "rename_session_api_chat_sessions__session_id__title_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatSessionRename"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Rename Session Api Chat Sessions  Session Id  Title Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/sessions/{session_id}/status": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Get Session Status",
        "description": "Get session status including any streaming or interrupted messages",
        "operationId": "get_session_status_api_chat_sessions__session_id__status_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/sessions/{session_id}/stop": {
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "Stop Chat Stream",
        "description": "Stop ongoing AI streaming for this session",
        "operationId": "stop_chat_stream_api_chat_sessions__session_id__stop_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/stats": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get Task Stats",
        "description": "Get task statistics for current user",
        "operationId": "get_task_stats_api_tasks_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/tasks": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create Task",
        "description": "Create a new task manually",
        "operationId": "create_task_api_tasks_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get Tasks",
        "description": "Get all tasks for current user with optional filtering",
        "operationId": "get_tasks_api_tasks_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Status"
            }
          },
          {
            "name": "urgency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Urgency"
            }
          },
          {
            "name": "importance",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Importance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskResponse"
                  },
                  "title": "Response Get Tasks Api Tasks Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{task_id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get Task",
        "description": "Get specific task by ID",
        "operationId": "get_task_api_tasks__task_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update Task",
        "description": "Update task by ID",
        "operationId": "update_task_api_tasks__task_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Task Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete Task",
        "description": "Delete task by ID",
        "operationId": "delete_task_api_tasks__task_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/generate": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Generate Task From Text",
        "description": "Generate task cards from Chinese text using AI (supports multiple tasks)",
        "operationId": "generate_task_from_text_api_tasks_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TaskResponse"
                  },
                  "type": "array",
                  "title": "Response Generate Task From Text Api Tasks Generate Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/tasks/extract-text-from-image": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Extract Text From Image",
        "description": "Extract text from image using OCR (preview step before task generation)\nUses AI OCR if active imageOCR provider is configured, otherwise falls back to EasyOCR",
        "operationId": "extract_text_from_image_api_tasks_extract_text_from_image_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_extract_text_from_image_api_tasks_extract_text_from_image_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/tasks/generate-from-image": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Generate Task From Image",
        "description": "Generate task cards from image using OCR + AI (supports multiple tasks)",
        "operationId": "generate_task_from_image_api_tasks_generate_from_image_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_generate_task_from_image_api_tasks_generate_from_image_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TaskResponse"
                  },
                  "type": "array",
                  "title": "Response Generate Task From Image Api Tasks Generate From Image Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/profile/": {
      "get": {
        "tags": [
          "User Profile"
        ],
        "summary": "Get User Profile",
        "description": "Get current user's profile",
        "operationId": "get_user_profile_api_profile__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "User Profile"
        ],
        "summary": "Update Profile",
        "description": "Update user profile",
        "operationId": "update_profile_api_profile__put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "User Profile"
        ],
        "summary": "Create Or Update Profile",
        "description": "Create or update user profile",
        "operationId": "create_or_update_profile_api_profile__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/profile/relationships": {
      "get": {
        "tags": [
          "User Profile"
        ],
        "summary": "Get Work Relationships",
        "description": "Get all work relationships for current user",
        "operationId": "get_work_relationships_api_profile_relationships_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkRelationshipResponse"
                  },
                  "type": "array",
                  "title": "Response Get Work Relationships Api Profile Relationships Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "User Profile"
        ],
        "summary": "Create Work Relationship",
        "description": "Create new work relationship",
        "operationId": "create_work_relationship_api_profile_relationships_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkRelationshipCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkRelationshipResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/profile/relationships/{relationship_id}": {
      "put": {
        "tags": [
          "User Profile"
        ],
        "summary": "Update Work Relationship",
        "description": "Update work relationship",
        "operationId": "update_work_relationship_api_profile_relationships__relationship_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "relationship_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Relationship Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkRelationshipUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkRelationshipResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Profile"
        ],
        "summary": "Delete Work Relationship",
        "description": "Delete work relationship",
        "operationId": "delete_work_relationship_api_profile_relationships__relationship_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "relationship_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Relationship Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/profile/personality/{dimension}": {
      "put": {
        "tags": [
          "User Profile"
        ],
        "summary": "Update Personality Dimension",
        "description": "Update specific Big Five personality dimension tags",
        "operationId": "update_personality_dimension_api_profile_personality__dimension__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dimension",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dimension"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "Tags"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AIProviderCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "provider_type": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Provider Type"
          },
          "category": {
            "type": "string",
            "pattern": "^(text|image)$",
            "title": "Category",
            "default": "text"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config"
          }
        },
        "type": "object",
        "required": [
          "name",
          "provider_type"
        ],
        "title": "AIProviderCreate"
      },
      "AIProviderResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name"
          },
          "provider_type": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Provider Type"
          },
          "category": {
            "type": "string",
            "pattern": "^(text|image)$",
            "title": "Category",
            "default": "text"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "last_tested": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Tested"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "provider_type",
          "id",
          "is_active",
          "created_at"
        ],
        "title": "AIProviderResponse"
      },
      "AIProviderUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(text|image)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "AIProviderUpdate"
      },
      "Body_extract_text_from_image_api_tasks_extract_text_from_image_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_extract_text_from_image_api_tasks_extract_text_from_image_post"
      },
      "Body_generate_task_from_image_api_tasks_generate_from_image_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_generate_task_from_image_api_tasks_generate_from_image_post"
      },
      "ChatMessageResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "thinking": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thinking"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "token_usage": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Usage"
          },
          "streaming_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Streaming Status",
            "default": "completed"
          }
        },
        "type": "object",
        "required": [
          "id",
          "role",
          "content",
          "timestamp"
        ],
        "title": "ChatMessageResponse"
      },
      "ChatSessionCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "default": "New Chat"
          }
        },
        "type": "object",
        "title": "ChatSessionCreate"
      },
      "ChatSessionRename": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "ChatSessionRename"
      },
      "ChatSessionResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "message_count": {
            "type": "integer",
            "title": "Message Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "created_at",
          "updated_at",
          "message_count"
        ],
        "title": "ChatSessionResponse"
      },
      "GenerateTitleRequest": {
        "properties": {
          "first_message": {
            "type": "string",
            "title": "First Message"
          }
        },
        "type": "object",
        "required": [
          "first_message"
        ],
        "title": "GenerateTitleRequest"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "TaskCreate": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Title"
          },
          "content": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Content"
          },
          "deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deadline"
          },
          "assignee": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee"
          },
          "participant": {
            "type": "string",
            "title": "Participant",
            "default": "‰Ω†"
          },
          "urgency": {
            "type": "string",
            "title": "Urgency",
            "default": "low"
          },
          "importance": {
            "type": "string",
            "title": "Importance",
            "default": "low"
          },
          "difficulty": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Difficulty",
            "default": 5
          }
        },
        "type": "object",
        "required": [
          "title",
          "content"
        ],
        "title": "TaskCreate"
      },
      "TaskResponse": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Title"
          },
          "content": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Content"
          },
          "deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deadline"
          },
          "assignee": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee"
          },
          "participant": {
            "type": "string",
            "title": "Participant",
            "default": "‰Ω†"
          },
          "urgency": {
            "type": "string",
            "title": "Urgency",
            "default": "low"
          },
          "importance": {
            "type": "string",
            "title": "Importance",
            "default": "low"
          },
          "difficulty": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Difficulty",
            "default": 5
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "source": {
            "type": "string",
            "title": "Source"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "title",
          "content",
          "id",
          "source",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "TaskResponse"
      },
      "TaskUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "content": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deadline"
          },
          "assignee": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee"
          },
          "participant": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Participant"
          },
          "urgency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Urgency"
          },
          "importance": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Importance"
          },
          "difficulty": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Difficulty"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "title": "TaskUpdate"
      },
      "UserCreate": {
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "title": "Username"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserLogin": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "UserLogin"
      },
      "UserProfileCreate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "work_nickname": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Work Nickname"
          },
          "gender": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender"
          },
          "job_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Type"
          },
          "job_level": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(ÂÆû‰π†|ÂàùÁ∫ß|‰∏≠Á∫ß|È´òÁ∫ß)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Level"
          },
          "is_manager": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Manager",
            "default": false
          },
          "personality_openness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Openness"
          },
          "personality_conscientiousness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Conscientiousness"
          },
          "personality_extraversion": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Extraversion"
          },
          "personality_agreeableness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Agreeableness"
          },
          "personality_neuroticism": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Neuroticism"
          },
          "personality_assessment": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Assessment"
          },
          "work_context": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Work Context"
          },
          "ai_analysis": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Analysis"
          },
          "knowledge_base": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Knowledge Base"
          }
        },
        "type": "object",
        "title": "UserProfileCreate"
      },
      "UserProfileResponse": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "work_nickname": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Work Nickname"
          },
          "gender": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender"
          },
          "job_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Type"
          },
          "job_level": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(ÂÆû‰π†|ÂàùÁ∫ß|‰∏≠Á∫ß|È´òÁ∫ß)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Level"
          },
          "is_manager": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Manager",
            "default": false
          },
          "personality_openness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Openness"
          },
          "personality_conscientiousness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Conscientiousness"
          },
          "personality_extraversion": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Extraversion"
          },
          "personality_agreeableness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Agreeableness"
          },
          "personality_neuroticism": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Neuroticism"
          },
          "personality_assessment": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Assessment"
          },
          "work_context": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Work Context"
          },
          "ai_analysis": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Analysis"
          },
          "knowledge_base": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Knowledge Base"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "work_relationships": {
            "items": {
              "$ref": "#/components/schemas/WorkRelationshipResponse"
            },
            "type": "array",
            "title": "Work Relationships"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "UserProfileResponse"
      },
      "UserProfileUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "work_nickname": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Work Nickname"
          },
          "gender": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender"
          },
          "job_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Type"
          },
          "job_level": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(ÂÆû‰π†|ÂàùÁ∫ß|‰∏≠Á∫ß|È´òÁ∫ß)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Level"
          },
          "is_manager": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Manager",
            "default": false
          },
          "personality_openness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Openness"
          },
          "personality_conscientiousness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Conscientiousness"
          },
          "personality_extraversion": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Extraversion"
          },
          "personality_agreeableness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Agreeableness"
          },
          "personality_neuroticism": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Neuroticism"
          },
          "personality_assessment": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Assessment"
          },
          "work_context": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Work Context"
          },
          "ai_analysis": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ai Analysis"
          },
          "knowledge_base": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Knowledge Base"
          }
        },
        "type": "object",
        "title": "UserProfileUpdate"
      },
      "UserResponse": {
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "title": "Username"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "active_text_provider_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active Text Provider Id"
          },
          "active_image_provider_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active Image Provider Id"
          }
        },
        "type": "object",
        "required": [
          "username",
          "id",
          "created_at"
        ],
        "title": "UserResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WorkRelationshipCreate": {
        "properties": {
          "coworker_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Coworker Name"
          },
          "relationship_type": {
            "type": "string",
            "pattern": "^(‰∏ãÂ±û|ÂêåÁ∫ß|‰∏äÁ∫ß|Âõ¢ÈòüË¥üË¥£‰∫∫|ÂÖ¨Âè∏ËÄÅÊùø)$",
            "title": "Relationship Type"
          },
          "work_nickname": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Work Nickname"
          },
          "job_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Type"
          },
          "job_level": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(ÂÆû‰π†|ÂàùÁ∫ß|‰∏≠Á∫ß|È´òÁ∫ß)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Level"
          },
          "personality_openness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Openness"
          },
          "personality_conscientiousness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Conscientiousness"
          },
          "personality_extraversion": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Extraversion"
          },
          "personality_agreeableness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Agreeableness"
          },
          "personality_neuroticism": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Neuroticism"
          }
        },
        "type": "object",
        "required": [
          "coworker_name",
          "relationship_type"
        ],
        "title": "WorkRelationshipCreate"
      },
      "WorkRelationshipResponse": {
        "properties": {
          "coworker_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Coworker Name"
          },
          "relationship_type": {
            "type": "string",
            "pattern": "^(‰∏ãÂ±û|ÂêåÁ∫ß|‰∏äÁ∫ß|Âõ¢ÈòüË¥üË¥£‰∫∫|ÂÖ¨Âè∏ËÄÅÊùø)$",
            "title": "Relationship Type"
          },
          "work_nickname": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Work Nickname"
          },
          "job_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Type"
          },
          "job_level": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(ÂÆû‰π†|ÂàùÁ∫ß|‰∏≠Á∫ß|È´òÁ∫ß)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Level"
          },
          "personality_openness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Openness"
          },
          "personality_conscientiousness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Conscientiousness"
          },
          "personality_extraversion": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Extraversion"
          },
          "personality_agreeableness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Agreeableness"
          },
          "personality_neuroticism": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Neuroticism"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "coworker_name",
          "relationship_type",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "WorkRelationshipResponse"
      },
      "WorkRelationshipUpdate": {
        "properties": {
          "coworker_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Coworker Name"
          },
          "relationship_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(‰∏ãÂ±û|ÂêåÁ∫ß|‰∏äÁ∫ß|Âõ¢ÈòüË¥üË¥£‰∫∫|ÂÖ¨Âè∏ËÄÅÊùø)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Relationship Type"
          },
          "work_nickname": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Work Nickname"
          },
          "job_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 200
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Type"
          },
          "job_level": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(ÂÆû‰π†|ÂàùÁ∫ß|‰∏≠Á∫ß|È´òÁ∫ß)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Level"
          },
          "personality_openness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Openness"
          },
          "personality_conscientiousness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Conscientiousness"
          },
          "personality_extraversion": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Extraversion"
          },
          "personality_agreeableness": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Agreeableness"
          },
          "personality_neuroticism": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality Neuroticism"
          }
        },
        "type": "object",
        "title": "WorkRelationshipUpdate"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User registration, login, and JWT token management"
    },
    {
      "name": "AI Providers",
      "description": "Configure and manage AI models (text/image categories)"
    },
    {
      "name": "Tasks",
      "description": "AI-powered task generation and management with Eisenhower Matrix"
    },
    {
      "name": "Chat",
      "description": "Real-time chat interface with WebSocket streaming"
    },
    {
      "name": "User Profile",
      "description": "User profiling with Big Five personality model and work relationships"
    },
    {
      "name": "OCR",
      "description": "Image text extraction using EasyOCR and AI vision models"
    }
  ]
}